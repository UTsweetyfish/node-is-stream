Description: replace ava by tape
Author: Xavier Guimard <yadd@debian.org>
Forwarded: not-needed
Last-Update: 2021-09-26

--- a/test.js
+++ b/test.js
@@ -1,9 +1,9 @@
-import fs from 'fs';
-import Stream from 'stream';
-import net from 'net';
-import test from 'ava';
-import tempy from 'tempy';
-import isStream from '.';
+const fs = require('fs');
+const Stream = require('stream');
+const net = require('net');
+const test = require('tape');
+const tempy = require('tempy');
+const isStream = require('.');
 
 test('isStream()', t => {
 	t.true(isStream(new Stream.Stream()));
@@ -19,6 +19,7 @@
 	t.false(isStream(null));
 	t.false(isStream(undefined));
 	t.false(isStream(''));
+	t.end();
 });
 
 test('isStream.writable()', t => {
@@ -31,6 +32,7 @@
 	t.false(isStream.writable(new Stream.Stream()));
 	t.false(isStream.writable(new Stream.Readable()));
 	t.false(isStream.writable(fs.createReadStream('test.js')));
+	t.end();
 });
 
 test('isStream.readable()', t => {
@@ -43,6 +45,7 @@
 	t.false(isStream.readable(new Stream.Stream()));
 	t.false(isStream.readable(new Stream.Writable()));
 	t.false(isStream.readable(fs.createWriteStream(tempy.file())));
+	t.end();
 });
 
 test('isStream.duplex()', t => {
@@ -54,6 +57,7 @@
 	t.false(isStream.duplex(new Stream.Writable()));
 	t.false(isStream.duplex(fs.createReadStream('test.js')));
 	t.false(isStream.duplex(fs.createWriteStream(tempy.file())));
+	t.end();
 });
 
 test('isStream.transform()', t => {
@@ -65,4 +69,5 @@
 	t.false(isStream.transform(new Stream.Writable()));
 	t.false(isStream.transform(fs.createReadStream('test.js')));
 	t.false(isStream.transform(fs.createWriteStream(tempy.file())));
+	t.end();
 });
